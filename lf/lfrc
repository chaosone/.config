set shellopts '-eu'
set ifs "\n"
set hidden true
set ignorecase true
set colors
set icons
set drawbox
set scrolloff 5
#set ratios 1
#set previewer ~/.config/lf/previewer.sh
#set cleaner ~/.config/lf/clear_img.sh

set previewer ~/.config/lf/lf_kitty_preview
set cleaner ~/.config/lf/lf_kitty_clean
map zi $LESSOPEN='| ~/.config/lf/scope-lf-wrapper.sh %s' less -R $f
#map b $qlmanage -p "$f"

# unmap default keybindings
map m
map d
map f

# generic mappings
map o open
#execute current file (must be executeable)
#map x $$f    
map X !$f    #halt lf and run current file,and then return to lf  

cmd mkdir ${{
    printf "Directory Name: "
    read ans
    mkdir $ans
}}

cmd mkfile ${{
    printf "File Name: "
    read ans
    touch $ans && chmod +x ./${ans}
    $EDITOR ${ans}
}}

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7zz x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd chmod ${{
  printf "Mode Bits(numbers): "
  read ans

  for file in "$fx"
  do
    chmod "$ans" "$file"
  done

  lf -remote 'send reload'
}}

map mk mkdir
map mf mkfile
map ge cd /etc
map gd cd ~/Downloads/
map gc cd ~/.config
map <enter> shell
map c clear
map dc %trash "$fx"
map ds %trash $fs
map dd cut

# $fs means selected entries
# $f means the current line entries

cmd find_edit ${{
    ${EDITOR} $(fzf)
}}

map fe find_edit    # find and edit a file

## jump to directory or a file with fzf
cmd fzf_jump ${{
    res="$(fd -H --follow -E ".git" -E "Library" -E "node_modules" | fzf --reverse --header='Jump to location' | sed 's/\\/\\\\/g;s/"/\\"/g')"
    if [ -d "$res" ] ; then
        cmd="cd"
    elif [ -f "$res" ] ; then
        cmd="select"
    else
        exit 0
    fi
    lf -remote "send $id $cmd \"$res\""
}}
map fj :fzf_jump    # fuzzy jump

## choose an util to open a file:
cmd open-with ${{
    set -f
    rifle -l $fx
    read -p "Open with: " method
    rifle -p $method $fx
}}

#map r open-with

cmd fzf $vi $(find . -name "$1" | fzf)
map a push :fzf<space>

cmd fzf_search ${{
    res="$( \
        RG_PREFIX="rg --column --line-number --no-heading --color=always \
            --smart-case "
        FZF_DEFAULT_COMMAND="$RG_PREFIX ''" \
            fzf --bind "change:reload:$RG_PREFIX {q} || true" \
            --ansi --layout=reverse --header 'Search in files' \
            | cut -d':' -f1
    )"
    [ ! -z "$res" ] && lf -remote "send $id select \"$res\""
}}
map fg :fzf_search
map ft filter

cmd finfo ${{
    file $fs
}}
map fi push %file<space>"$f"

# yank path/file name/dirname
cmd yank-dirname $dirname -- "$f" | pbcopy
cmd yank-path $printf '%s' "$fx" | pbcopy
cmd yank-basename $basename -a -- $fx | pbcopy

# print a warnning if lf run in a nested instance
%[ $LF_LEVEL -eq 1 ] || echo "Warning: You're in a nested lf instance!"

map bm mark-save
map bl mark-load
map br mark-remove

## yank path to clipboard
#cmd yank_path ${{
    #readlink -f $fx | pbcopy
#}}
map ya push :yank-path

## bulk rename
cmd bulk-rename ${{
    old="$(mktemp)"
    new="$(mktemp)"
    if [ -n "$fs" ]; then
        fs="$(basename -a $fs)"
    else
        fs="$(ls)"
    fi
    printf '%s\n' "$fs" >"$old"
    printf '%s\n' "$fs" >"$new"
    $EDITOR "$new"
    [ "$(wc -l < "$new")" -ne "$(wc -l < "$old")" ] && exit
    paste "$old" "$new" | while IFS= read -r names; do
        src="$(printf '%s' "$names" | cut -f1)"
        dst="$(printf '%s' "$names" | cut -f2)"
        if [ "$src" = "$dst" ] || [ -e "$dst" ]; then
            continue
        fi
        mv -- "$src" "$dst"
    done
    rm -- "$old" "$new"
    lf -remote "send $id unselect"
}}

map . set hidden!

